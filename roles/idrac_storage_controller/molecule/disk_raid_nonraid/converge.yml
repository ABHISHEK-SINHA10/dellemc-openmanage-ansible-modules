# Copyright (C) 2024 Dell Inc. or its subsidiaries. All Rights Reserved.

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Converge
  hosts: all
  gather_facts: false
  tasks:
    - name: Block for disk conversion to Raid
      block:
        - name: Pre-Req - Making the target disk as nonraid
          ansible.builtin.include_tasks: ../__helper.yml
          vars:
            reset_trigger: 1
            target: "{{ physicaldisks[0] }}"
            target_raid_disk: "{{ physicaldisks[0] }}"
            command: "ConvertToNonRAID"

        - name: Create a list of dictionaries of dictionaries
          ansible.builtin.set_fact:
            my_list:
              id: "{{ physicaldisks[0] }}"
              raid_state: raid

        - name: Validate the disk conversion to RAID
          ansible.builtin.import_role:
            name: idrac_storage_controller
          vars:
            hostname: "{{ lookup('env', 'IDRAC_IP') }}"
            username: "{{ lookup('env', 'IDRAC_USER') }}"
            password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
            validate_certs: false
            job_wait: true
            job_wait_timeout: 1200
            controller_id: "{{ controller_name }}"
            disks: "{{ my_list }}"

        - name: creating Vd to check if disk is converted in Raid mode (Expect pass to create the Vd)
          ansible.builtin.include_tasks: ../__helper.yml
          vars:
            volume_type: "RAID 0"
            span_length: 1
            id: ["{{ physicaldisks[0] }}"]
            vd_trigger: 1
          when: not ansible_check_mode

        - name: Check if VD is created
          ansible.builtin.set_fact:
            virtualdisk: true
            loop: "{{ lookup('dict',
             result_post_check.storage_status.Message.Controller[controller_name], wantlist=True) }}"
          when: not ansible_check_mode and "'VirtualDisk' in item.value"

        - name: Store boolean value in a variable
          ansible.builtin.set_fact:
            is_vd_exist_first_check: "{{ virtualdisk }}"
          when: not ansible_check_mode

        - name: Verifying disk conversion to raid in check mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "Changes found to be applied."
              - raid_state_out.changed
          when: ansible_check_mode

        - name: Verifying disk conversion to raid in normal mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "Successfully performed the 'ConvertToRAID' operation."
              - raid_state_out.changed
              - is_vd_exist_first_check
          when: not ansible_check_mode and raid_state_out.changed

        - name: Verifying disk conversion to raid in idempotence mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "No changes found to be applied."
              - not raid_state_out.changed
          when: not ansible_check_mode and not raid_state_out.changed
      always:
        - name: Deleting the volume.
          ansible.builtin.include_tasks:
            file: ../__delete_virtual_drive.yml
          when: is_vd_exist_first_check

    - name: Block for disk conversion to Non-Raid
      block:
        - name: Pre-Req - Making the target disk as raid
          ansible.builtin.include_tasks: ../__helper.yml
          vars:
            reset_trigger: 1
            target: "{{ physicaldisks[0] }}"
            target_raid_disk: "{{ physicaldisks[0] }}"
            command: "ConvertToRAID"

        - name: Create a list of dictionaries of dictionaries
          ansible.builtin.set_fact:
            my_list:
              id: "{{ physicaldisks[0] }}"
              raid_state: nonraid
 
        - name: Validate the disk conversion to NON-RAID
          ansible.builtin.import_role:
            name: idrac_storage_controller
          vars:
            hostname: "{{ lookup('env', 'IDRAC_IP') }}"
            username: "{{ lookup('env', 'IDRAC_USER') }}"
            password: "{{ lookup('env', 'IDRAC_PASSWORD') }}"
            validate_certs: false
            job_wait: true
            job_wait_timeout: 1200
            controller_id: "{{ controller_name }}"
            disks: "{{ my_list }}"

        - name: Check for the lC status to be ready
          ansible.builtin.include_role: name=prepare_lifecycle_controller_job
          vars:
            job_id: "{{raid_state_out.status.Id}}"
          when: raid_state_out.msg == "Successfully submitted the job that performs the 'ConvertToNonRAID' operation."
          ignore_errors: true

        - name: Creating Vd to check if disk is converted in non-Raid mode (Expecting fail to create the VD)
          ansible.builtin.include_tasks: ../__helper.yml
          vars:
            volume_type: "RAID 0"
            span_length: 1
            id: ["{{ physicaldisks[0] }}"]
            ignore_errors_val: true
            vd_trigger: 1
          when: not ansible_check_mode

        - name: Check if VD is created
          ansible.builtin.set_fact:
            virtualdisk: false
            loop: "{{ lookup('dict', result_post_check.storage_status.Message.Controller[ controller_name ], wantlist=True) }}"
            when: "not 'VirtualDisk' in item.value"
          when: not ansible_check_mode

        - name: Store boolean value in a variable
          ansible.builtin.set_fact:
            is_vd_exist_second_check: "{{ virtualdisk }}"
          when: not ansible_check_mode

        - name: Verifying disk conversion to nonraid in check mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "Changes found to be applied."
              - raid_state_out.changed
          when: ansible_check_mode

        - name: Verifying disk conversion to nonraid in normal mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "Successfully submitted the job that performs the 'ConvertToNonRAID' operation."
              - raid_state_out.changed
              - not is_vd_exist_second_check
          when: not ansible_check_mode and raid_state_out.changed

        - name: Verifying disk conversion to nonraid in idempotence mode
          ansible.builtin.assert:
            that:
              - raid_state_out.msg == "No changes found to be applied."
              - not raid_state_out.changed
          when: not ansible_check_mode and not raid_state_out.changed
      always:
        - name: Perform the disk conversion to RAID as a cleanup
          ansible.builtin.include_tasks: ../__helper.yml
          vars:
            target_raid_disk: "{{ physicaldisks[0] }}"
            command: "ConvertToRAID"
